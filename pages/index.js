import { ApolloClient, gql, InMemoryCache } from '@apollo/client';
import Head from 'next/head'
import styles from '../styles/Home.module.scss'
import Deck from '../components/deck/deck'
//import {Deck as DeckBack} from '../library/deck'

const {
  GRAPHQL_SERVER
} = process.env;

const client = new ApolloClient({
  uri: GRAPHQL_SERVER,
  cache: new InMemoryCache(),
});

const tableQuery = gql `
      query {
        table {
          number
          symbol
        }
      }
`;

const getCardsQuery = gql `
query GetCards($cards: Int){
  getCards(cards: $cards) {
    number
    symbol
  } 
}`;

export default function Home({title, all, table, hand}) {
  return (
    <div className={styles.home}>
      <Head>
        <title>Cards | Mavila</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="preconnect" href="https://fonts.gstatic.com" />
        <link href="https://fonts.googleapis.com/css2?family=Do+Hyeon&family=Roboto:wght@100&display=swap" rel="stylesheet"/>
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div>
        <h1 className={styles.title}>{title}</h1>
          <Deck className={styles.all} title="Deck"  cards={all}/>
          <Deck title="Table" cards={table} flipped="2" />
          <Deck title="Hand" cards={hand} flipped="2" />
      </div>
    </div>
  )
}

export async function getServerSideProps(context) {
//const deck = new DeckBack();
//const all = deck.dispatchCards(52);
//const table = deck.dispatchCards(5);
//const hand = deck.dispatchCards(2);

const allData = await client.query({query: getCardsQuery, variables: { cards: 10 }, fetchPolicy: 'no-cache'});
const tableData = await client.query({query: tableQuery});
const handData = await client.query({query: getCardsQuery, variables: { cards: 2 }, fetchPolicy: 'no-cache'});

//const allData = await (await fetch('http://localhost:4000', {
//  method: 'POST',
//  headers: {
//    'Content-Type': 'application/json'
//  },
//  body: JSON.stringify({
//    query: `
//      query GetCards($cards: Int){
//        getCards(cards: $cards) {
//          number
//          symbol
//        }
//      }`,
//      variables: {
//        cards: 52
//      } 
//  })
//})).json();

//const tableData = await (await fetch('http://localhost:4000', {
//  method: 'POST',
//  headers: {
//    'Content-Type': 'application/json'
//  },
//  body: JSON.stringify({
//    query: `
//      query {
//        table {
//          number
//          symbol
//        }
//      }` 
//  })
//})).json();

//const handData = await (await fetch('http://localhost:4000', {
//  method: 'POST',
//  headers: {
//    'Content-Type': 'application/json'
//  },
//  body: JSON.stringify({
//    query: `
//      query GetCards($cards: Int){
//        getCards(cards: $cards) {
//          number
//          symbol
//        }
//      }`,
//      variables: {
//        cards: 2
//      } 
//  })
//})).json();

return {
  props: {
    title: 'Playing Texas',
    all: allData.data.getCards,
    table: tableData.data.table,
    hand: handData.data.getCards
  }, // will be passed to the page component as props
}

//    return {
//      props: {
//        title: 'Playing Texas',
//        all,
//        table,
//        hand
//      }
//    }
}
